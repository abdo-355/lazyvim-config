-- Autocmds are automatically loaded on the VeryLazy event
-- Default autocmds that are always set: https://github.com/LazyVim/LazyVim/blob/main/lua/lazyvim/config/autocmds.lua
--
-- Add any additional autocmds here
-- with `vim.api.nvim_create_autocmd`
--
-- Or remove existing autocmds by their group name (which is prefixed with `lazyvim_` for the defaults)
-- e.g. vim.api.nvim_del_augroup_by_name("lazyvim_wrap_spell")

-- SQL and sqlc autocmds
vim.api.nvim_create_augroup("sqlc_integration", { clear = true })

-- Optional: Auto-generate sqlc code when SQL files are saved
-- Uncomment the following if you want automatic generation on save
--[[
vim.api.nvim_create_autocmd("BufWritePost", {
  group = "sqlc_integration",
  pattern = { "*.sql", "*.pgsql" },
  callback = function()
    -- Check if we're in a directory with sqlc.yaml or sqlc.yml
    local cwd = vim.fn.getcwd()
    local sqlc_config = vim.fn.glob(cwd .. "/sqlc.y*ml")
    
    if sqlc_config ~= "" then
      -- Run sqlc generate in the background
      local job = vim.fn.jobstart("sqlc generate", {
        cwd = cwd,
        on_exit = function(_, exit_code)
          if exit_code == 0 then
            vim.schedule(function()
              vim.notify("sqlc generate completed automatically", vim.log.levels.INFO)
              -- Restart LSP to pick up generated files
              vim.cmd("LspRestart")
            end)
          end
        end,
      })
    end
  end,
  desc = "Auto-generate sqlc code when SQL files are saved",
})
--]]

-- Refresh LSP when generated Go files are detected
vim.api.nvim_create_autocmd("BufReadPost", {
  group = "sqlc_integration", 
  pattern = { "**/db/*.go", "**/sqlc/*.go", "**/gen/*.go" },
  callback = function()
    -- Check if this looks like a generated sqlc file
    local content = vim.api.nvim_buf_get_lines(0, 0, 10, false)
    local is_sqlc_generated = false
    
    for _, line in ipairs(content) do
      if line:match("Code generated by sqlc") or line:match("// Code generated") then
        is_sqlc_generated = true
        break
      end
    end
    
    if is_sqlc_generated then
      -- Ensure LSP is aware of this file
      vim.schedule(function()
        vim.cmd("LspRestart")
      end)
    end
  end,
  desc = "Refresh LSP when sqlc generated files are opened",
})
